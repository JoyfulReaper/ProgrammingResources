@page "/view-resource/{ResourceId:int}"
@inject IResourceEndpoint _resourceData
@inject IResourceTagEndpoint _resourceTagData

<div class="row">
    <div class="col">

        <h2 class="text-center">Programming Resource</h2>

        <ErrorMessage Error="@_errorMessage" />

        @if (_resource is null)
        {
            <Loading />
        }
        else
        {
            <div class="row">
                <div class="col-8">
                    <h3>@_resource.Title</h3>
                    <h5>@_resource.ProgrammingLanguage</h5>
                    <p class="mt-3">
                        @_resource.Description
                    </p>
                </div>
                <div class="col-4">
                    <h3>Tags</h3>
                    @foreach (var tag in _resource.Tags)
                    {
                        <span><a href="view-tag/@tag.TagId">@tag.Name</a></span>
                        <br />
                    }
                    <div class="mt-3">
                        <label>Add Tag</label>
                        <input class="form-control from-control-sm" @bind="_tag"/>
                        <button class="btn btn-sm btn-primary mt-1" type="button" @onclick="AddTag">Add</button>
                    </div>

                </div>
            </div>

        }

    </div>
</div>

@code {
    [Parameter]
    public int ResourceId { get; set; }

    private Resource? _resource = null;
    private string? _errorMessage;
    private string _tag;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            _resource = await _resourceData.Get(ResourceId);
            _errorMessage = null;
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
    }

    private async Task AddTag()
    {
        if(string.IsNullOrEmpty(_tag))
        {
            return;
        }

        try
        {
            await _resourceTagData.TagResource(ResourceId, _tag);
            _errorMessage = null;
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }

        _tag = string.Empty;
    }
}