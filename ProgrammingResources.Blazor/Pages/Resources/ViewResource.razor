@page "/view-resource/{ResourceId:int}"
@inject IResourceEndpoint _resourceData

<div class="row">
    <div class="col">

        <h2 class="text-center">Programming Resource</h2>

        <ErrorMessage Error="@_errorMessage" />

        @if (_resource is null)
        {
            <Loading />
        }
        else
        {
            <div class="row">
                <div class="col-8">
                    <h3>@_resource.Title</h3>
                    <h5>@_resource.ProgrammingLanguage</h5>
                    <p class="mt-3">
                        @_resource.Description
                    </p>
                </div>
                <div class="col-4">
                    <h3>Tags</h3>
                    @foreach (var tag in _resource.Tags)
                    {
                        <span>@tag.Name</span><br />
                    }
                </div>
            </div>

        }

    </div>
</div>

@code {
    [Parameter]
    public int ResourceId { get; set; }

    private Resource? _resource = null;
    private string? _errorMessage;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            _resource = await _resourceData.Get(ResourceId);
            _errorMessage = null;
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
    }
}